# # Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями). 
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# # Пользователь вводит 2 числа. n — кол-во элементов первого множества. m — кол-во элементов второго множества. 
# Затем пользователь вводит сами элементы множеств.

# # Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растёт на круглой грядке, причём кусты высажены только по окружности. 
# # Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растёт N кустов.
# # Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод — на i-ом кусте выросло ai ягод.
# # В этом фермерском хозяйстве внедрена система автоматического сбора черники.
# #  Эта система состоит из управляющего модуля и нескольких собирающих модулей. 
# # Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
# # Напишите программу для нахождения максимального числа ягод,
# #  которое может собрать за один заход собирающий модуль, находясь перед некоторым кустом заданной во входном файле грядки.

# ----------------------------------------------------------------------------------------------

# # Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями). 
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# # Пользователь вводит 2 числа. n — кол-во элементов первого множества. m — кол-во элементов второго множества. 
# Затем пользователь вводит сами элементы множеств.
def Two_orders_of_magnitude():
    from random import randint
    n = int(input("Кол-во элеметов первого множества => "))
    m = int(input("Кол-во элеметов второго множества => "))
    count_f = 1
    list_f = []
    while count_f <= n:
        list_f.append(randint(1,10))
        count_f += 1
    print("Первый список =>",list_f)
    count_s = 1
    list_s = []
    while count_s <= m:
        list_s.append(randint(1,10))
        count_s += 1
    print("Второй список =>",list_s)
    res_list = []
    for first in list_f:
        for second in list_s:
            if first == second:
                res_list.append(first)
    return sorted(set(res_list))
result = Two_orders_of_magnitude()
print("Итоговый список =>",result)
# ----------------------------------------------------------------------------------------------
import random
kust = int(input("введите количество кустов: "))
berryes = list(random.randint(0, 10) for i in range(kust))
result = []
i = 0
sum = 0

print(berryes)

while (i < kust):
    if (i == kust - 1):
        sum = berryes[i] + berryes[i - 1] + berryes[0]
    else:
        sum = berryes[i] + berryes[i - 1] + berryes[i + 1]
        result.append(sum)
        result.sort()
    i += 1

print(f"максимальное число ягод за одну итерацию {result[-1]}")
